Highcharts.setOptions({lang:{thousandsSep:","}});let chartIdGap=document.getElementById("chart-container-racial-seniority-gap");function drawHighcharts(){Highcharts.chart(chartIdGap,{chart:{type:"bar",styledMode:!0,spacingBottom:25,spacingRight:100,spacingLeft:0,spacingTop:0},title:{text:null},data:{googleSpreadsheetKey:"14pZyCqx8UHlwLn6hYFaj7eQHwy1K6wRdfv2Kn2gEJUg"},plotOptions:{series:{groupPadding:.1,stacking:"percent"}},legend:{align:"left",symbolRadius:0,verticalAlign:"top",x:-10,itemMarginTop:0},xAxis:{labels:{style:{whiteSpace:"nowrap"}},tickLength:5},yAxis:{title:!1,labels:{useHTML:!0,overflow:"allow"},reversedStacks:!1},credits:{enabled:!1},tooltip:{shadow:!1,padding:10,valueSuffix:"%"},responsive:{rules:[{condition:{maxWidth:500},chartOptions:{chart:{spacingRight:10},legend:{align:"left",x:-13},tooltip:{enabled:!1}}}]}})}setTimeout(function(){if(""===chartIdGap.innerHTML){let e=document.getElementsByClassName("chart-area-racial-seniority-gap");for(var t=0;t<e.length;t++)e[t].style.display="none";document.getElementById("chart-fallback").innerHTML+='<img src="https://fm-static.cnbc.com/awsmedia/chart/2019/10/08/chart-error_wide.1570569331252.png" style="width: 100%;max-width:660px">'}},500),"complete"===document.readyState||"interactive"===document.readyState?drawHighcharts():document.addEventListener("DOMContentLoaded",drawHighcharts);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiSGlnaGNoYXJ0cyIsInNldE9wdGlvbnMiLCJsYW5nIiwidGhvdXNhbmRzU2VwIiwiY2hhcnRJZEdhcCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJkcmF3SGlnaGNoYXJ0cyIsImNoYXJ0IiwidHlwZSIsInN0eWxlZE1vZGUiLCJzcGFjaW5nQm90dG9tIiwic3BhY2luZ1JpZ2h0Iiwic3BhY2luZ0xlZnQiLCJzcGFjaW5nVG9wIiwidGl0bGUiLCJ0ZXh0IiwiZGF0YSIsImdvb2dsZVNwcmVhZHNoZWV0S2V5IiwicGxvdE9wdGlvbnMiLCJzZXJpZXMiLCJncm91cFBhZGRpbmciLCJzdGFja2luZyIsImxlZ2VuZCIsImFsaWduIiwic3ltYm9sUmFkaXVzIiwidmVydGljYWxBbGlnbiIsIngiLCJpdGVtTWFyZ2luVG9wIiwieEF4aXMiLCJsYWJlbHMiLCJzdHlsZSIsIndoaXRlU3BhY2UiLCJ0aWNrTGVuZ3RoIiwieUF4aXMiLCJ1c2VIVE1MIiwib3ZlcmZsb3ciLCJyZXZlcnNlZFN0YWNrcyIsImNyZWRpdHMiLCJlbmFibGVkIiwidG9vbHRpcCIsInNoYWRvdyIsInBhZGRpbmciLCJ2YWx1ZVN1ZmZpeCIsInJlc3BvbnNpdmUiLCJydWxlcyIsImNvbmRpdGlvbiIsIm1heFdpZHRoIiwiY2hhcnRPcHRpb25zIiwic2V0VGltZW91dCIsImlubmVySFRNTCIsImNoYXJ0QXJlYSIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJpIiwibGVuZ3RoIiwiZGlzcGxheSIsInJlYWR5U3RhdGUiLCJhZGRFdmVudExpc3RlbmVyIl0sIm1hcHBpbmdzIjoiQUFRQUEsV0FBQUMsV0FBQSxDQUNBQyxLQUFBLENBQ0FDLGFBQUEsT0FJQSxJQUFBQyxXQUFBQyxTQUFBQyxlQUFBLHdDQWlCQSxTQUFBQyxpQkFDQVAsV0FBQVEsTUFBQUosV0FBQSxDQUNBSSxNQUFBLENBQ0FDLEtBQUEsTUFDQUMsWUFBQSxFQUNBQyxjQUFBLEdBQ0FDLGFBQUEsSUFDQUMsWUFBQSxFQUNBQyxXQUFBLEdBRUFDLE1BQUEsQ0FDQUMsS0FBQSxNQUVBQyxLQUFBLENBQ0FDLHFCQUFBLGdEQUdBQyxZQUFBLENBQ0FDLE9BQUEsQ0FDQUMsYUFBQSxHQUNBQyxTQUFBLFlBb0JBQyxPQUFBLENBQ0FDLE1BQUEsT0FDQUMsYUFBQSxFQUNBQyxjQUFBLE1BQ0FDLEdBQUEsR0FDQUMsY0FBQSxHQUVBQyxNQUFBLENBQ0FDLE9BQUEsQ0FDQUMsTUFBQSxDQUNBQyxXQUFBLFdBR0FDLFdBQUEsR0FPQUMsTUFBQSxDQUNBbkIsT0FBQSxFQUNBZSxPQUFBLENBQ0FLLFNBQUEsRUFDQUMsU0FBQSxTQUVBQyxnQkFBQSxHQU1BQyxRQUFBLENBQ0FDLFNBQUEsR0FFQUMsUUFBQSxDQUNBQyxRQUFBLEVBQ0FDLFFBQUEsR0FDQUMsWUFBQSxLQUVBQyxXQUFBLENBQ0FDLE1BQUEsQ0FBQSxDQUNBQyxVQUFBLENBQ0FDLFNBQUEsS0FFQUMsYUFBQSxDQUNBeEMsTUFBQSxDQUNBSSxhQUFBLElBRUFXLE9BQUEsQ0FDQUMsTUFBQSxPQUNBRyxHQUFBLElBRUFhLFFBQUEsQ0FDQUQsU0FBQSxTQTVHQVUsV0FBQSxXQUNBLEdBQUEsS0FBQTdDLFdBQUE4QyxVQUFBLENBRUEsSUFBQUMsRUFBQTlDLFNBQUErQyx1QkFBQSxtQ0FDQSxJQUFBLElBQUFDLEVBQUEsRUFBQUEsRUFBQUYsRUFBQUcsT0FBQUQsSUFDQUYsRUFBQUUsR0FBQXRCLE1BQUF3QixRQUFBLE9BR0FsRCxTQUFBQyxlQUFBLGtCQUFBNEMsV0FBQSw0SUFJQSxLQXdHQSxhQUFBN0MsU0FBQW1ELFlBQUEsZ0JBQUFuRCxTQUFBbUQsV0FDQWpELGlCQUVBRixTQUFBb0QsaUJBQUEsbUJBQUFsRCIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gYWRkcyBzb2NpYWwgY2xhc3MgdG8gZ2V0IHNvY2lhbCBjaGFydFxuLy8gbGV0IGVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiY2hhcnQtYXJlYVwiKTtcbi8vIGZvcih2YXIgaSA9IDA7IGkgPCBlbGVtZW50Lmxlbmd0aDsgaSsrKVxuLy8ge1xuLy8gICAgIGVsZW1lbnRbaV0uY2xhc3NOYW1lICs9IFwiIHNvY2lhbFwiO1xuLy8gfVxuXG5cbkhpZ2hjaGFydHMuc2V0T3B0aW9ucyh7XG4gICAgbGFuZzoge1xuICAgICAgdGhvdXNhbmRzU2VwOiAnLCdcbiAgICB9XG59KTtcblxubGV0IGNoYXJ0SWRHYXAgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNoYXJ0LWNvbnRhaW5lci1yYWNpYWwtc2VuaW9yaXR5LWdhcFwiKTtcblxuLy8gY2hlY2tzIGZvciB0aGUgY2hhcnQgSUQgYW5kIGRpc3BsYXlzIGEgYmFja3VwIGltYWdlIGlmIHRoZSBicm93c2VyIGNhbid0IGZpbmQgaXRcbnNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgaWYoY2hhcnRJZEdhcC5pbm5lckhUTUwgPT09IFwiXCIpIHtcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ25vSWQnKTtcbiAgICAgICAgbGV0IGNoYXJ0QXJlYSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJjaGFydC1hcmVhLXJhY2lhbC1zZW5pb3JpdHktZ2FwXCIpO1xuICAgICAgICBmb3IodmFyIGkgPSAwOyBpIDwgY2hhcnRBcmVhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBjaGFydEFyZWFbaV0uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICB9IFxuICAgICAgICAvLyBpbnNlcnQgY2hhcnQgc2NyZWVuc2hvdCBoZXJlXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2hhcnQtZmFsbGJhY2tcIikuaW5uZXJIVE1MICs9ICc8aW1nIHNyYz1cImh0dHBzOi8vZm0tc3RhdGljLmNuYmMuY29tL2F3c21lZGlhL2NoYXJ0LzIwMTkvMTAvMDgvY2hhcnQtZXJyb3Jfd2lkZS4xNTcwNTY5MzMxMjUyLnBuZ1wiIHN0eWxlPVwid2lkdGg6IDEwMCU7bWF4LXdpZHRoOjY2MHB4XCI+JztcbiAgICB9IGVsc2Uge1xuICAgICAgICAvLyBjb25zb2xlLmxvZygneWVzSWQnKVxuICAgIH1cbn0sNTAwKTtcblxuZnVuY3Rpb24gZHJhd0hpZ2hjaGFydHMoKSB7XG4gICAgSGlnaGNoYXJ0cy5jaGFydChjaGFydElkR2FwLCB7XG4gICAgICAgIGNoYXJ0OiB7XG4gICAgICAgICAgICB0eXBlOiAnYmFyJyxcbiAgICAgICAgICAgIHN0eWxlZE1vZGU6IHRydWUsXG4gICAgICAgICAgICBzcGFjaW5nQm90dG9tOiAyNSxcbiAgICAgICAgICAgIHNwYWNpbmdSaWdodDogMTAwLFxuICAgICAgICAgICAgc3BhY2luZ0xlZnQ6IDAsXG4gICAgICAgICAgICBzcGFjaW5nVG9wOiAwXG4gICAgICAgIH0sIFxuICAgICAgICB0aXRsZToge1xuICAgICAgICAgICAgdGV4dDogbnVsbFxuICAgICAgICB9LFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBnb29nbGVTcHJlYWRzaGVldEtleTogJzE0cFp5Q3F4OFVIbHdMbjZoWUZhajdlUUh3eTFLNndSZGZ2MktuMmdFSlVnJ1xuICAgICAgICB9LFxuICAgICAgICAvLyBmb3IgYmFyIGNoYXJ0cyBvbmx5XG4gICAgICAgIHBsb3RPcHRpb25zOiB7XG4gICAgICAgICAgICBzZXJpZXM6IHtcbiAgICAgICAgICAgICAgICBncm91cFBhZGRpbmc6IDAuMSxcbiAgICAgICAgICAgICAgICBzdGFja2luZzogJ3BlcmNlbnQnXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICAvLyBmb3IgbGluZSBjaGFydHMgb25seVxuICAgICAgICAvLyBwbG90T3B0aW9uczoge1xuICAgICAgICAvLyAgICAgc2VyaWVzOiB7XG4gICAgICAgIC8vICAgICAgICAgbGluZVdpZHRoOiAxLFxuICAgICAgICAvLyAgICAgICAgIC8vIGNsaXA6IGZhbHNlLFxuICAgICAgICAvLyAgICAgICAgIG1hcmtlcjoge1xuICAgICAgICAvLyAgICAgICAgICAgICBlbmFibGVkOiBmYWxzZSxcbiAgICAgICAgLy8gICAgICAgICAgICAgc3ltYm9sOiAnY2lyY2xlJyxcbiAgICAgICAgLy8gICAgICAgICAgICAgZmlsbENvbG9yOiAnI2ZmZmZmZicsXG4gICAgICAgIC8vICAgICAgICAgICAgIHN0YXRlczoge1xuICAgICAgICAvLyAgICAgICAgICAgICAgICAgaG92ZXI6IHtcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICBmaWxsQ29sb3I6ICcjZmZmZmZmJ1xuICAgICAgICAvLyAgICAgICAgICAgICAgICAgfVxuICAgICAgICAvLyAgICAgICAgICAgICB9XG4gICAgICAgIC8vICAgICAgICAgfVxuICAgICAgICAvLyAgICAgfVxuICAgICAgICAvLyB9LFxuICAgICAgICBsZWdlbmQ6IHtcbiAgICAgICAgICAgIGFsaWduOiAnbGVmdCcsXG4gICAgICAgICAgICBzeW1ib2xSYWRpdXM6IDAsXG4gICAgICAgICAgICB2ZXJ0aWNhbEFsaWduOiAndG9wJyxcbiAgICAgICAgICAgIHg6IC0xMCxcbiAgICAgICAgICAgIGl0ZW1NYXJnaW5Ub3A6IDBcbiAgICAgICAgfSxcbiAgICAgICAgeEF4aXM6IHtcbiAgICAgICAgICAgIGxhYmVsczoge1xuICAgICAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHRpY2tMZW5ndGg6IDUsXG4gICAgICAgICAgICAvLyBlZGl0cyB4QXhpcyB0aWNrc1xuICAgICAgICAgICAgLy8gZGF0ZVRpbWVMYWJlbEZvcm1hdHM6IHtcbiAgICAgICAgICAgIC8vICAgICB3ZWVrOiAnJWIuICVlJyxcbiAgICAgICAgICAgIC8vIH0sXG4gICAgICAgICAgICAvLyB0aWNrSW50ZXJ2YWw6IDI0ICogMzYwMCAqIDEwMDAgKiA3XG4gICAgICAgIH0sXG4gICAgICAgIHlBeGlzOiB7XG4gICAgICAgICAgICB0aXRsZTogZmFsc2UsXG4gICAgICAgICAgICBsYWJlbHM6IHtcbiAgICAgICAgICAgICAgICB1c2VIVE1MOiB0cnVlLFxuICAgICAgICAgICAgICAgIG92ZXJmbG93OiAnYWxsb3cnXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcmV2ZXJzZWRTdGFja3M6IGZhbHNlXG4gICAgICAgICAgICAvLyBhZGRzIGNvbW1hcyB0byB0aG91c2FuZHNcbiAgICAgICAgICAgIC8vIGZvcm1hdHRlcjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgLy8gICAgIHJldHVybiBIaWdoY2hhcnRzLm51bWJlckZvcm1hdCh0aGlzLnZhbHVlLDAsJy4nLCcsJyk7XG4gICAgICAgICAgICAvLyB9LFxuICAgICAgICB9LFxuICAgICAgICBjcmVkaXRzOiB7XG4gICAgICAgICAgICBlbmFibGVkOiBmYWxzZVxuICAgICAgICB9LFxuICAgICAgICB0b29sdGlwOiB7XG4gICAgICAgICAgICBzaGFkb3c6IGZhbHNlLFxuICAgICAgICAgICAgcGFkZGluZzogMTAsXG4gICAgICAgICAgICB2YWx1ZVN1ZmZpeDogJyUnXG4gICAgICAgIH0sXG4gICAgICAgIHJlc3BvbnNpdmU6IHtcbiAgICAgICAgICAgIHJ1bGVzOiBbe1xuICAgICAgICAgICAgY29uZGl0aW9uOiB7XG4gICAgICAgICAgICAgICAgbWF4V2lkdGg6IDUwMFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoYXJ0T3B0aW9uczoge1xuICAgICAgICAgICAgICAgIGNoYXJ0OiB7XG4gICAgICAgICAgICAgICAgc3BhY2luZ1JpZ2h0OiAxMFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgbGVnZW5kOiB7XG4gICAgICAgICAgICAgICAgICAgIGFsaWduOiAnbGVmdCcsXG4gICAgICAgICAgICAgICAgICAgIHg6IC0xM1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgdG9vbHRpcDoge1xuICAgICAgICAgICAgICAgICAgICBlbmFibGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1dXG4gICAgICAgIH1cbiAgICB9KVxufVxuXG5pZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gJ2NvbXBsZXRlJyB8fCBkb2N1bWVudC5yZWFkeVN0YXRlID09PSAnaW50ZXJhY3RpdmUnKSB7XG4gICAgZHJhd0hpZ2hjaGFydHMoKTtcbn0gZWxzZSB7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgZHJhd0hpZ2hjaGFydHMpO1xufSJdfQ==
